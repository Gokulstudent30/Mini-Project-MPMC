#include <reg51.h>

// Pin configurations for traffic signals
sbit red1 = P0^0;
sbit yellow1 = P0^1;
sbit green1 = P0^2;
sbit red2 = P0^3;
sbit yellow2 = P0^4;
sbit green2 = P0^5;
sbit red3 = P1^0;
sbit yellow3 = P1^1;
sbit green3 = P1^2;
sbit red4 = P1^3;
sbit yellow4 = P1^4;
sbit green4 = P1^5;

// Pin configurations for servo motors
sbit servo1 = P2^0;
sbit servo2 = P2^1;
sbit servo3 = P2^2;
sbit servo4 = P2^3;

// Initialize timer 0 for PWM control of servo motors
void init_pwm() {
    TMOD |= 0x01; // Set timer 0 in mode 1 (16-bit timer with auto-reload)
    TH0 = 0xFF; // Set timer 0 initial value to 1ms (maximum servo pulse width)
    TL0 = 0x00;
    TR0 = 1; // Start timer 0
}

// Set servo position based on traffic signal state
void set_servo_position() {
    if(red1) {
        servo1 = 1; // Set servo 1 to +90 degrees
    } else {
        servo1 = 0; // Set servo 1 to -90 degrees
    }
    if(red2) {
        servo2 = 1; // Set servo 2 to +90 degrees
    } else {
        servo2 = 0; // Set servo 2 to -90 degrees
    }
    if(red3) {
        servo3 = 1; // Set servo 3 to +90 degrees
    } else {
        servo3 = 0; // Set servo 3 to -90 degrees
    }
    if(red4) {
        servo4 = 1; // Set servo 4 to +90 degrees
    } else {
        servo4 = 0; // Set servo 4 to -90 degrees
    }
}

// Delay function for servo control
void delay_servo_ms(unsigned int ms) {
    unsigned int i, j;
    for(i=0; i<ms; i++) {
        for(j=0; j<125; j++) {
            // Each cycle of the inner loop takes approximately 1us
            _nop_();
        }
    }
}

// Delay function for traffic signals
void delay_traffic_ms(unsigned int ms) {
    unsigned int i, j;
    for(i=0; i<ms; i++) {
        for(j=0; j<125; j++) {
            // Each cycle of the inner loop takes approximately 1us
            _nop_();
        }
    }
}

// Turn all traffic lights red
void all_red() {
    red1 = 1; yellow1 = 0; green1 = 0;
    red2 = 1; yellow2 = 0; green2 = 0;
    red3 = 1; yellow3 = 0; green3 = 0;
    red4 = 1; yellow4 = 0; green4 = 0;
}

// Initialize external interrupt 0 (INT0) on P
